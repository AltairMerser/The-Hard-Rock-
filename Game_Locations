package Game.Locations;

import Game.Characters.GG;
import Game.Game;
import Game.Characters.Game_Characters;

import java.util.Scanner;

import static Game.Characters.GG.gg;
import static Game.Characters.Game_Characters.npc1;
import static Game.Characters.Game_Characters.npc2;
import static Game.Characters.Game_Characters.npc3;
import static Game.Characters.Game_Characters.npc4;
import static Game.Characters.Game_Characters.npc5;
import static Game.Game.*;


public class Game_Locations {

    public static boolean new_game = true;
    public static boolean rename = true;
    public static int a = 0;
    static String ch;
    static Scanner scanner = new Scanner(System.in);

    public Game_Locations() {


    }

    public static void start_location(String gg_name) {
        System.out.println("Здравствуй " + gg_name + " я направил тебя в этот мир для того, чтобы.....эээээ....ну короче пока.");
        System.out.println("\"в_битву\" я без понятия где я и из-за этого я хочу кого-нибудь убить. ");
        System.out.println("\"стоп\" куда я попал..... хм... а зачем тут эта кнопка ? .......");
        System.out.println("\"идти\" направиться в сторону реки");
        ch = scanner.next();
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (ch.equals("в_битву")) {
            npc_1 = true;
            Game.fight_npc_outset();
        }
        if (ch.equals("стоп")) {
            System.exit(0);
        }
        if (ch.equals("идти")) {
            choice();
        }
        if (GG.gg.hp > 0) {
            if (new_game) {
                start_location(gg_name);
            }
        }
    }

    public static void choice() {
        System.out.println("Твое имя " + gg.name);
        System.out.println("Твое здоровье " + gg.hp);
        System.out.println("Твоя мана " + gg.mp);
        System.out.println("Твоя выносливость " + gg.st);
        System.out.println("\"в_деревню\" - направиться в деревню ");
        System.out.println("\"в_битву_с\" - подраться с.. ");
        System.out.println("\"стоп\" - и все же куда я попал? хм... а зачем тут эта кнопка ? .......");
        System.out.println(gg.xp);
        System.out.println(gg.lv);
        ch = scanner.next();
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (ch.equals("в_битву")) {
            npc_1 = true;
            Game.fight_npc_outset();
        }
        if (ch.equals("стоп")) {
            System.exit(0);
        }
        if (ch.equals("в_деревню")) {
            the_edge_of_the_village();
            double r = Math.random() * 2;
            a = (int) r;
        }
        if (ch.equals("в_битву_с")) {
            v_bitvu_s_outset();
        }
        if (GG.gg.hp > 0) {
            choice();
        }
    }
    public static void v_bitvu_s_outset(){
        System.out.println("\"мышь\" - отправиться к " + npc1.name);
        System.out.println("\"змея\" - отправиться к " + npc2.name2);
        System.out.println("\"черепаха\"  - отправиться к " + npc3.name3);
        System.out.println("\"бездомный\"  - отправиться к " + npc4.name4);
        System.out.println("\"бродяга\"  - отправиться к " + npc5.name5);
        System.out.println("так к кому ты хочешь отправиться подраться? " );
        System.out.println(npc3.hp3);
        ch = scanner.next();
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (ch.equals("мышь")) {
            npc_1 = true;
            Game_Characters.npc1.hp = Game_Characters.npc1.max_hp;
            Game.fight_npc_outset();
        }
        if (ch.equals("змея")) {
            npc_2 = true;
            Game_Characters.npc2.hp2 = Game_Characters.npc2.max_hp2;
            Game.fight_npc_outset();
        }
        if (ch.equals("черепаха")) {
            npc_3 = true;
            Game_Characters.npc3.hp3 = Game_Characters.npc3.max_hp3;
            Game.fight_npc_outset();
        }
        if (ch.equals("бездомный")) {
            npc_4 = true;
            Game_Characters.npc4.hp4 = Game_Characters.npc4.max_hp4;
            Game.fight_npc_outset();
        }
        if (ch.equals("бродяга")) {
            npc_5 = true;
            Game_Characters.npc5.hp5 = Game_Characters.npc5.max_hp5;
            Game.fight_npc_outset();
        }
        if (GG.gg.hp > 0) {
            v_bitvu_s_outset();
        }
    }

    public static void the_rename_point() {

        System.out.println(new_game);
        System.out.println(rename);
        System.out.println(" \"переименовать_гг\" чтобы переименовать героя");
        ch = scanner.next();
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (ch.equals("переименовать_гг")) {
            rename = false;
            nami();
        }else {
            if(new_game) {
                rename = false;
                the_edge_of_the_village();
            }else {
                rename = false;
                village();
            }
          }
        }
    public static void nami() {
        Scanner scanner = new Scanner(System.in);
        GG.gg.name = scanner.next();
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (new_game) {
            the_edge_of_the_village();
        } else {
            village();
        }
    }
    public static void the_edge_of_the_village() {
        System.out.println("Вы на окраине деревни");
        hod += 1;
        if (hod != 0){
            if (gg.hp < gg.max_hp) {
                gg.hp = gg.hp + (gg.max_hp / 100) * 5;
            }
            if (gg.mp < gg.max_mp){
                gg.mp = gg.mp + (gg.max_mp / 100) * 5;
            }
            if (gg.st < gg.max_st){
                gg.st = gg.st + (gg.max_st / 100) * 5;
            }
        }
        if (rename) {
            the_rename_point();
        }
        if (new_game) {
            System.out.println(a);
            Game_Dialog.start_dialog(a);
        }else{
            village();
        }
    }
    public static void village(){

        System.exit(0);
    }
}
